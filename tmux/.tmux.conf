# Bind escape to copy mode
unbind [
bind Escape copy-mode

# p = paste
unbind p
bind p paste-buffer

# no escape delay
set -sg escape-time 0

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Start window numbering at 1 (default => 0)
set -g base-index 1
setw -g pane-base-index 1

set -g clock-mode-style 12

# Renumber windows after removing one
set -g renumber-windows on

# use 256 colors
set-option -ga terminal-overrides ",alacritty:RGB,xterm-256color:RGB"

# Keep plenty of history for scrollback
set -g history-limit 50000

# mouse
set -g mouse on

# Act like vim in copy mode
set -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Pane switching with awareness of Vim splits.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# increase display time
set -g display-panes-time 1200

# status bar stuff
set-option -g status on
set-option -gq status-utf8 on

# Dismiss current pane to background window
bind b break-pane -d
bind-key j choose-window 'join-pane -h -s "%%"'
bind-key J choose-window 'join-pane    -s "%%"'

# more intuitive keybindings for splitting
unbind-key '"'
unbind-key '%'

bind-key | split-window -h -c "#{pane_current_path}"
bind-key \\ split-window -fh -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

# Easy rotating of panes
bind-key C-k swap-pane -U

# Swapping Windows
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

# Keeping Current Path
bind c new-window -c "#{pane_current_path}"

# Toggle between windows
bind-key Space last-window

# Toggle between sessions
bind-key C-Space switch-client -l

# Easy return to Vim from tmux runner zoom runner pane
bind C-p run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys ':VtrZoomRunnerPane' 'C-m') || tmux send-keys 'C-c' && tmux select-pane -l"

# Make C-j display a selectable list of sessions
bind C-j choose-tree

# Keep window names as I set them
setw -g automatic-rename off

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Enable VI mode
set-window-option -g mode-keys vi

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "tmux configs reloaded"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_output_prefix '[ '
set -g @prefix_highlight_output_suffix ' ]'

set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "
set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_status_modules "application session user host date_time"
set -g @catppuccin_status_left_separator  "█"
set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

run '~/.tmux/plugins/tpm/tpm'
